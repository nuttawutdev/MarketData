@model MarketData.Models.AdminKeyInViewModel

@{
    ViewData["Title"] = "บันทึกข้อมูลยอดขาย";
    Html.RenderPartial("_WarningModal");
    Html.RenderPartial("_SuccessModal");
    Html.RenderPartial("_FailedModal");
}

<div class="container">
    <h3>
        @ViewData["Title"]

    </h3>


    <hr />
    <br />
    <br />

    <div class="row">
        <div style="width: 100%; font-size: 13px;">
            <div class="row col-sm-12">
                <div class="col-sm-3">
                    <label>Distribution Channel</label>
                    @Html.DropDownList("channelList", new SelectList(Model.channelList, "distributionChannelID", "distributionChannelName"), "All", new { id = "channelList", @class = "form-control col-sm-12" })

                </div>
                <div class="col-sm-3">
                    <label>Retailer Group</label>
                    @Html.DropDownList("retailerGroupList", new SelectList(Model.retailerGroupList, "retailerGroupID", "retailerGroupName"), "All", new { id = "retailerGroupList", @class = "form-control col-sm-12" })

                </div>
                <div class="col-sm-3">
                    <label>Department Store</label>
                    @Html.DropDownList("departmentStoreList", new SelectList(Model.departmentStoreList, "departmentStoreID", "departmentStoreName"), "All", new { id = "departmentStoreList", @class = "form-control col-sm-12" })

                </div>

                <div class="col-sm-3">
                    <label>Brand</label>
                    @Html.DropDownList("brandList", new SelectList(Model.brandList, "brandID", "brandName"), "All", new { id = "brandList", @class = "form-control col-sm-12" })

                </div>
            </div>

            <div class="row col-sm-12" style="padding-top: 15px;">
                <div class="col-sm-3">

                    <label> Week</label>
                    <select id="ddlWeek" class="form-control col-sm-12 ">
                        <option value="">All</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                    </select>

                </div>

                <div class="col-sm-3">
                    <label>Month</label>
                    <select id="ddlMonth" class="form-control col-sm-12 ">
                        <option value="">All</option>
                        <option value="01">January</option>
                        <option value="02">February</option>
                        <option value="03">March</option>
                        <option value="04">April</option>
                        <option value="05">May</option>
                        <option value="06">June</option>
                        <option value="07">July</option>
                        <option value="08">August</option>
                        <option value="09">September</option>
                        <option value="10">October</option>
                        <option value="11">November</option>
                        <option value="12">December</option>
                    </select>


                </div>
                <div class="col-sm-3">
                    <label>Year</label>
                    @Html.DropDownList(
                        "yearList",
                        new SelectList(
                            Model.yearList.Select(x => new { Value = x, Text = x }),
                            "Value",
                            "Text"
                        ), "All", new { id = "yearList", @class = "form-control col-sm-12" }
                    )
                </div>
                <div class="col-sm-3">
                    <label>Universe</label>
                    @{
                        var defaultUniverse = "LPD";
                        List<SelectListItem> listUniverse = new List<SelectListItem>();
                        listUniverse.Add(new SelectListItem
                        {
                            Text = "CPD",
                            Value = "CPD"
                        });
                        listUniverse.Add(new SelectListItem
                        {
                            Text = "LPD",
                            Value = "LPD",

                        });

                        @Html.DropDownListFor(c => defaultUniverse, new SelectList(listUniverse, "Value", "Text", 1), "All", new { id = "iduniverseList", @class = "form-control " })

                    }


                </div>
            </div>
            <div class="row col-sm-12" style="padding-top: 15px;padding-bottom:15px;">

                <div class="col-sm-3" style="align-self: flex-end;">
                    <div class="filter-group">
                        <button id="btnCreate" type="button" class="btn btn-danger"><i class="ion-plus"></i> Create</button>
                    </div>
                </div>

            </div>



        </div>

    </div>

</div>

<div style="overflow-x:auto; padding-top:30px;padding-left:20px;padding-right:20px">
    <div class="table-responsive table-sm">
        <div class="table-wrapper">
            <div style=" overflow-x: auto;">
                <table class="table table-striped table-hover " id="tblDetails">
                </table>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button id="btnSubmit" class="btn btn-primary text-white" type="button">Save</button>

    </div>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        $("#container").removeClass("container");
        $('#btnSubmit').hide();

        $('#btnCreate').on('click', function (e) {
            $("#blocker").show();
            if (
                !$('#ddlWeek').val() ||
                !$('#ddlMonth').val() ||
                !$('#yearList').val() ||
                !$('#iduniverseList').val()) {
                $('#warningModal').modal('show');

                $('#myModalWarningResult').text('กรุณาเลือกข้อมูลให้ครบเพื่อสร้างข้อมูลยอดขายรายแบรนด์');
                $("#blocker").hide();
            } else {
                var model = @Html.Raw(Json.Serialize(Model));
                var model2 = @Html.Raw(Json.Serialize(Model.remarkList));
                var frmdata = {
                    year: $("#yearList").val(),
                    month: $('#ddlMonth').val(),
                    week: $('#ddlWeek').val(),
                    distributionChannelID: $('#channelList').val() ? $('#channelList').val() : null,
                    retailerGroupID: $('#retailerGroupList').val() ? $('#retailerGroupList').val() : null,
                    departmentStoreID: $('#departmentStoreList').val() ? $('#departmentStoreList').val() : null,
                    brandID: $('#brandList').val() ? $('#brandList').val() : null ,
                    universe: $('#iduniverseList').val()
                };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetAdminKeyInDetail", "KeyIn")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(frmdata),
                    datatype: "json",
                    success: function (data) {
                        $("#blocker").hide();
                        if (data.data != null) {

                            var titleTable = '<thead class="table-secondary">' +
                                '    <th class="col-1">Brand</th>' +
                                '    <th class="col-1">Department Store</th>' +
                                '    <th class="col-2">Amount Sales (' + parseInt(data.year) + " " + $('#ddlMonth option:selected').text() + ' week 4)</th>' +
                                '    <th class="col-1">Rank</th>' +
                                '    <th class="col-1">Amount Sales</th>' +
                                '    <th class="col-1">Whole Sales</th>' +
                                '    <th class="col-1">SK (%)</th>' +
                                '    <th class="col-1">MU (%)</th>' +
                                '    <th class="col-1">FG (%)</th>' +
                                '    <th class="col-1">OT (%)</th>' +
                                '    <th class="col-1">Remark</th>' +
                                '</tr>' +
                                '</thead>';

                            $('#tblDetails').empty();
                            var rowTable = ' <tbody>';
                            for (var i = 0; i < data.data.length; i++) {

                                var amountSalePreviousYear = data.data[i].amountSalePreviousYear ? data.data[i].amountSalePreviousYear : "";
                                var rank = data.data[i].rank ? data.data[i].rank : "";
                                var amountSale = data.data[i].amountSale ? data.data[i].amountSale : "";
                                var wholeSale = data.data[i].wholeSale ? data.data[i].wholeSale : "";
                                var sk = data.data[i].sk ? data.data[i].sk : "";
                                var mu = data.data[i].mu ? data.data[i].mu : "";
                                var fg = data.data[i].fg ? data.data[i].fg : "";
                                var ot = data.data[i].ot ? data.data[i].ot : "";

                                var option = '';
                                option += '<option value=""></option>';

                                for (var j = 0; j < model2.length; j++) {
                                    var selectedRemark = model2[j].remark == data.data[i].remark ? "selected" : "";
                                    option += '<option value="' + model2[j].remark + '" ' + selectedRemark +'>' + model2[j].remark + '</option>';
                                }
                                option += '</select></td>';

                                if (data.data[i].brandColor != "" && data.data[i].brandColor != null && data.data[i].brandColor != "#ffffff") {
                                    rowTable += '<tr style="background: ' + data.data[i].brandColor + ';color: white">';
                                } else {
                                    rowTable += '<tr >';
                                }
                                rowTable +=
                                    '<td class="col-2 ID" hidden>' + data.data[i].id + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].counterID + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].departmentStoreID + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].channelID + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].year + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].month + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].week + '</td>' +
                                    '<td class="col-2" hidden>' + data.data[i].brandID + '</td>' +
                                    '<td class="col-1">' + data.data[i].brandName + '</td>' +
                                    '<td class="col-1">' + data.data[i].departmentStoreName + '</td>' +
                                    '<td class="col-2">' + amountSalePreviousYear + '</td>' +
                                    '<td class="col-1" style="align-items:center"><input  type="number" class="form-control input-sm rank" value=' + rank + '></td>' +
                                    '<td class="col-1" style="align-items:center"><input type="text" data-type="currency" class="form-control input-sm amountSale" value=' + amountSale + '></td>' +
                                    '<td class="col-1" style="align-items:center"><input data-type="currency" type="text" class="form-control input-sm wholeSale" value=' + wholeSale + '></td>' +
                                    '<td class="col-1" style="align-items:center;"><input data-type="currency" type="text" class="form-control input-sm sk" value=' + sk + '></td>' +
                                    '<td class="col-1" style="align-items:center;"><input data-type="currency" type="text" class="form-control input-sm mu" value=' + mu + '></td>' +
                                    '<td class="col-1" style="align-items:center;"><input data-type="currency" type="text" class="form-control input-sm fg" value=' + fg + '></td>' +
                                    '<td class="col-1" style="align-items:center;"><input data-type="currency" type="text" class="form-control input-sm ot" value=' + ot + '></td>' +
                                '<td class="col-1" style="align-items:center"><select id="ddlRemark" class="form-control col-sm-12 remark">' + option +


                                '<td class="col-2" hidden>' + data.data[i].retailerGroupID + '</td>' +
                                    '</tr>';
                            }

                            rowTable += '<tr>' +
                                '<td class="col-1">Total</td>' +
                                '<td class="col-1"></td>' +
                                '<td class="col-2">' + data.totalAmountPreviosYear+'</td>' +
                                '<td class="col-1" style=" align-items:center"></td>' +
                                '<td class="col-1" style=" align-items:center"></td>' +
                                '<td class="col-1" style=" align-items:center"></td>' +
                                '<td class="col-1" style=" align-items:center;"></td>' +
                                '<td class="col-1" style=" align-items:center;"></td>' +
                                '<td class="col-1" style=" align-items:center;"></td>' +
                                '<td class="col-1" style=" align-items:center;"></td>' +
                                '<td class="col-1" style=" align-items:center"></td>'+
                                '</tr>';

                            $('#tblDetails').append(titleTable + rowTable + ' </tbody>');
                            $('#btnSubmit').show();
                        }
                    },
                    error: function () {
                        $("#blocker").hide();
                    }
                });
            }
        })

        $(document).on("keyup", "input[data-type='currency']", function (event) {
            formatCurrency($(this));
        });

        $(document).on("blur", "input[data-type='currency']", function (event) {
            formatCurrency($(this), "blur");
        });


        function formatNumber(n) {
            // format number 1000000 to 1,234,567
            return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        }

        function formatCurrency(input, blur) {
            // appends $ to value, validates decimal side
            // and puts cursor back in right position.

            // get input value
            var input_val = input.val();

            // don't validate empty input
            if (input_val === "") { return; }

            // original length
            var original_len = input_val.length;

            // initial caret position
            var caret_pos = input.prop("selectionStart");

            // check for decimal
            if (input_val.indexOf(".") >= 0) {

                // get position of first decimal
                // this prevents multiple decimals from
                // being entered
                var decimal_pos = input_val.indexOf(".");

                // split number by decimal point
                var left_side = input_val.substring(0, decimal_pos);
                var right_side = input_val.substring(decimal_pos);

                // add commas to left side of number
                left_side = formatNumber(left_side);

                // validate right side
                right_side = formatNumber(right_side);

                // On blur make sure 2 numbers after decimal
                if (blur === "blur") {
                    right_side += "00";
                }

                // Limit decimal to only 2 digits
                right_side = right_side.substring(0, 2);

                // join number by .
                input_val = left_side + "." + right_side;

            } else {
                // no decimal entered
                // add commas to number
                // remove all non-digits
                input_val = formatNumber(input_val);
                input_val = input_val;

                // final formatting
                if (blur === "blur") {
                    input_val += ".00";
                }
            }

            // send updated string to input
            input.val(input_val);

            // put caret back in the right position
            var updated_len = input_val.length;
            caret_pos = updated_len - original_len + caret_pos;
            input[0].setSelectionRange(caret_pos, caret_pos);
        }

        $('#btnSubmit').on('click', function (e) {
            var frmdata = getDataFromTable();
            frmdata.data.splice(-1);
            console.log(frmdata)
            if (validate_AmountSale_Rank(frmdata) && validate_Sum_Percent(frmdata) && validate_WholeSales_AmountSales(frmdata) && validate_Rank_AmountSales(frmdata)) {
                $("#blocker").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveAdminKeyIn", "KeyIn")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(frmdata),
                    datatype: "json",
                        success: function (data) {
                        $("#blocker").hide();
                        if (data.isSuccess) {
                            $('#successModalHref').attr("href", "KeyinByBrand");
                            $('#successModal').modal('show');
                        } else if (data.isDuplicated) {
                            $('#failedModal').modal('show');
                            $('#myModalFailedResult').text('Duplicate data!');
                        } else {
                            $('#failedModal').modal('show');
                            $('#myModalFailedResult').text(data.responseError != ""
                                && data.responseError != null ? data.responseError : 'Save data failed');
                         }
                        $('#confirmID').val('');
                        $('#myModalFailedResult').val('');
                    },
                    error: function () {
                        $("#blocker").hide();
                    }
                });
            }
        })

        function getDataFromTable() {
            var model = @Html.Raw(Json.Serialize(Model));

            var frmdata  = {};
            var memberDetails = new Array();
            $("#tblDetails TBODY TR").each(function () {
                var row = $(this);
                var memberDetail = {};
                var rank = row.find("TD").find(".rank").val();
                var amountSale = row.find("TD").find(".amountSale").val();
                var wholeSale = row.find("TD").find(".wholeSale").val();
                var sk = row.find("TD").find(".sk").val();
                var mu = row.find("TD").find(".mu").val();
                var fg = row.find("TD").find(".fg").val();
                var ot = row.find("TD").find(".ot").val();
                var amountSalePreviousYear = row.find("TD").eq(10).html();
                var week = row.find("TD").eq(6).html();
                memberDetail.ID = row.find("TD").eq(0).html();
                memberDetail.counterID = row.find("TD").eq(1).html();
                memberDetail.departmentStoreID = row.find("TD").eq(2).html();
                memberDetail.distributionChannelID = row.find("TD").eq(3).html();
                memberDetail.year = row.find("TD").eq(4).html();
                memberDetail.month = row.find("TD").eq(5).html();
                memberDetail.week = week;
                memberDetail.brandID = row.find("TD").eq(7).html();
                memberDetail.brandName = row.find("TD").eq(8).html();
                memberDetail.departmentStoreName = row.find("TD").eq(9).html();
                memberDetail.amountSalePreviousYear = amountSalePreviousYear ? parseFloat(amountSalePreviousYear) : null;
                memberDetail.rank = rank ? parseInt(rank) : null;
                memberDetail.amountSale = amountSale ? parseFloat(amountSale.replace(/\,/g, "")) : null;
                memberDetail.wholeSale = wholeSale ? parseFloat(wholeSale.replace(/\,/g, "")) : null;
                memberDetail.sk = sk ? parseFloat(sk.replace(/\,/g, "")) : null;
                memberDetail.mu = mu ? parseFloat(mu.replace(/\,/g, "")) : null;
                memberDetail.fg = fg ? parseFloat(fg.replace(/\,/g, "")) : null;
                memberDetail.ot = ot ? parseFloat(ot.replace(/\,/g, "")) : null;
                memberDetail.remark = row.find("TD").find(".remark").val();
                memberDetail.retailerGroupID = row.find("TD").eq(19).html();
                memberDetail.universe = $('#iduniverseList').val()
                memberDetails.push(memberDetail);
            });

            frmdata.data = memberDetails;
            //frmdata.userID = bAKeyInID;
            return frmdata;
        };

        function validate_AmountSale_Rank(data) {
            var isNullAmount = data.data.some(function (i) {
                return (i.amountSale == null && i.rank != null) ||
                    (i.amountSale != null && i.rank == null);
            })
            if (isNullAmount) {
                showWarningAlert('NullAmount');
                return 0;
            } else return 1;
        }

        function validate_Sum_Percent(data) {

            var validateData = data.data.some(function (i) {
                var sk = i.sk != null ? parseFloat(i.sk) : 0;
                var mu = i.mu != null ? parseFloat(i.mu) : 0;
                var fg = i.fg != null ? parseFloat(i.fg) : 0;
                var ot = i.ot != null ? parseFloat(i.ot) : 0;

                var sum = sk + mu + fg + ot;
                return sum != 0 && sum != 100;
            })
            if (validateData) {
                showWarningAlert('100Percent');
                return 0;
            } else return 1;
        }

        function validate_WholeSales_AmountSales(data) {

            var validateData = data.data.some(function (i) {
                var wholeSale = i.wholeSale != null && i.wholeSale != '' ? parseFloat(i.wholeSale) : 0;
                var amountSale = i.amountSale != null && i.amountSale != '' ? parseFloat(i.amountSale) : 0;
                return amountSale < wholeSale;
            })

            if (validateData) {
                showWarningAlert('NullWholeSales_AmountSales');
                return 0;
            } else return 1;
        }

        function validate_Rank_AmountSales(data) {

            var number = 0;
            var duplicateRank = false;
            for (var i = 0; i < data.data.length; i++) {

                if (data.data[i].rank != null && data.data[i].rank != '' && number == data.data[i].rank) {
                    duplicateRank = true;
                    break;
                } else {
                    number = data.data[i].rank
                }
            }

            if (duplicateRank) {
                showWarningAlert('DuplicateRank');
                return 0;
            }

            var sortAmount = data.data.sort((a, b) => (a.amountSale > b.amountSale) ? -1 : 1)

            var inCorrectAmountRank = false;
            var sort = 1;
            for (var i = 0; i < sortAmount.length; i++) {
                if (sortAmount[i].amountSale != null && sortAmount[i].rank != null) {
                    if (sortAmount[i].rank == sort) {
                        sort++;
                    } else {
                        inCorrectAmountRank = true;
                        break;
                    }
                }
            }
            if (inCorrectAmountRank) {
                showWarningAlert('IncorrectAmountRank');
                return 0;
            } else {
                return 1;
            }

        }

        function showWarningAlert(typeWarning) {
            var msg = '';
            switch (typeWarning) {
                case 'NullAmount':
                    msg = 'กรุณากรอกข้อมูล Amount sales และ Rank';
                    break;
                case '100Percent':
                    msg = 'ค่ารวมของ SK, MU, FG, OT ต้องมีค่าเท่ากับ 100% เท่านั้น';
                    break;
                case 'NullWholeSales_AmountSales':
                    msg = 'Whole sales ต้องน้อยกว่า Amount Sales';
                    break;
                case 'DuplicateRank':
                    msg = 'Duplicate Rank!';
                    break;
                case 'IncorrectAmountRank':
                    msg = 'ข้อมูล Amount sales และ Rank ไม่สอดคล้องกัน';
                    break;
                default:
            }


            $('#warningModal').modal('show');

            $('#myModalWarningResult').text(msg);


        }

        $('#channelList').on('change', function (e) {
            getDepartmentStoreList()
        });

        $('#retailerGroupList').on('change', function (e) {
            getDepartmentStoreList()
        });

          function getDepartmentStoreList() {
            var retailerGroupID = $("#retailerGroupList").val();
            var distributionChannelID = $("#channelList").val();

            var model = @Html.Raw(Json.Serialize(Model));
            var departmentStoreList = model.departmentStoreList;

            if (retailerGroupID != "") {
                departmentStoreList = departmentStoreList.filter(function (items) {
                    return items.retailerGroupID == retailerGroupID
                });
            }

            if (distributionChannelID != "") {
                departmentStoreList = departmentStoreList.filter(function (items) {
                    return items.distributionChannelID == $('#channelList').val()
                });
            }

            var lengthSelect = $('#departmentStoreList');

            lengthSelect.empty();
            lengthSelect.append("<option value='All'>All</option>")
            $.each(departmentStoreList, function (index, row) {
                lengthSelect.append("<option value='" + row.departmentStoreID + "'>" + row.departmentStoreName + "</option>")
            });

        }

    });
</script>

