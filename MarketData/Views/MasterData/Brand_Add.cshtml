@model MarketData.Models.BrandViewModel
@using Microsoft.AspNetCore.Http;
@using System.Text.Json;
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = Model.brandName == null ? "Add Brand" : "Edit Brand";
    Html.RenderPartial("_SuccessModal");
    Html.RenderPartial("_FailedModal");
}

<style>
    .font-band {
        font-size: 12px
    }
</style>

<h3>@ViewData["Title"]</h3>
<hr />

<br />

<form>

    @{
        var userPermission = JsonSerializer.Deserialize<MarketData.Model.Response.User.GetUserDetailResponse>(HttpContextAccessor.HttpContext.Session.GetString("userDetail"));
        <input hidden type="text" value="@userPermission.userID" class="form-control input-sm" id="iduserID" placeholder="">
    }

    <div class="row col-md-12 col-sm-12">
        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Brand Name</label><label style="font-size:14px;color:red">*</label>
            <input type="text" value="@Model.brandName" class="form-control input-sm" id="idbrandName" placeholder="">
        </div>
        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Short Name</label>
            <input type="text" value="@Model.brandShortName" class="form-control input-sm" id="idbrandShortName" placeholder="">
        </div>
    </div>
    <div class="row col-md-12 col-sm-12">
        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Brand Group</label><label style="font-size:14px;color:red">*</label>

            @Html.DropDownListFor(n => n.brandGroupID, new SelectList(Model.brandGroupList, "brandGroupID", "brandGroupName", 1), "Please select", new { id = "idbrandGroupList", @class = "form-control " })
        </div>

        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Brand Segment</label><label style="font-size:14px;color:red">*</label>

            @Html.DropDownListFor(n => n.brandSegmentID, new SelectList(Model.brandSegmentList, "brandSegmentID", "brandSegmentName", 1), "Please select", new { id = "idbrandSegmentList", @class = "form-control " })

        </div>
    </div>
    <div class="row col-md-12 col-sm-12">
        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Brand Type</label><label style="font-size:14px;color:red">*</label>
            @Html.DropDownListFor(n => n.brandTypeID, new SelectList(Model.brandTypeList, "brandTypeID", "brandTypeName", 1), "Please select", new { id = "idbrandTypeList", @class = "form-control " })

        </div>

        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Brand Color</label>
            <input type="color" class="textbox-color" value="@(Model.color==null?"#ffffff":Model.color)" id="idbrandColor" data-value="@Model.color" />
        </div>
    </div>

    <div class="row col-md-12 col-sm-12">
        <div class="form-group col-md-6 col-sm-6">
            <label for="name">Loreal Brand Rank</label>
            <input type="number" class="form-control input-sm" value="@Model.lorealBrandRank" id="idlorealBrandRank" />
        </div>

        <div class="form-group col-md-6 col-sm-6 " style=" align-self: flex-end;">
            <label for="name">Universe</label>
            @{
                List<SelectListItem> listUniverse = new List<SelectListItem>();
                listUniverse.Add(new SelectListItem
                {
                    Text = "CPD",
                    Value = "CPD"
                });
                listUniverse.Add(new SelectListItem
                {
                    Text = "LPD",
                    Value = "LPD",

                });

                @Html.DropDownListFor(n => n.universe, new SelectList(listUniverse, "Value", "Text", 1), "Please select", new { id = "iduniverseList", @class = "form-control " })

            }

        </div>
    </div>

    <div class="row col-md-12 col-sm-12">
        <div class="form-group col-md-6 col-sm-6">
            <label>Brand ที่ต้องการรวม</label>
            @Html.DropDownListFor(n => n.brandID, new MultiSelectList(Model.brandList, "brandID", "brandName"), new { id = "brandList", @class = "form-control ", multiple = "multiple", style = "height: 200px;" })

        </div>

    </div>

    <div class="row col-md-12 col-sm-12">
        <div class="form-group col-md-6 col-sm-6">
            <label>
                @if (Model.active)
                {
                    <input value="" id="flagactive" checked type="checkbox" data-toggle="toggle">
                }
                else
                {
                    <input value="" id="flagactive" type="checkbox" data-toggle="toggle">
                }
                Active
            </label>
        </div>
        <div class="form-group col-md-6 col-sm-6">
            <label>
                @if (Model.showInAdjust)
                {
                    <input value="" id="flagShowInAdjust" checked type="checkbox" data-toggle="toggle">
                }
                else
                {
                    <input value="" id="flagShowInAdjust" type="checkbox" data-toggle="toggle">
                }
                Show in adjust
            </label>
        </div>

    </div>
    <div class="modal-footer">
        <button id="save" class="btn btn-danger " type="button">Save</button>
        <a href="Brand" class="btn btn-outline-danger">Cancel</a>

    </div>
</form>


<script type="text/javascript">

    $(document).ready(function () {
        $("#save").click(function () {
            var model = @Html.Raw(Json.Serialize(Model));

             var frmdata = {
                 brandID: model.brandID,
                 brandName: $('#idbrandName').val(),
                 brandShortName: $('#idbrandShortName').val(),
                 brandGroupID: $('#idbrandGroupList').val(),
                 brandGroupName: $('#idbrandGroupList option:selected').text(),
                 brandSegmentID: $('#idbrandSegmentList').val(),
                 brandSegmentName: $('#idbrandSegmentList option:selected').text(),
                 brandTypeID: $('#idbrandTypeList').val(),
                 brandTypeName: $('#idbrandTypeList option:selected').text(),
                 brandColor: $("#idbrandColor").val(),
                 lorealBrandRank: parseInt($('#idlorealBrandRank').val()),
                 universe: $('#iduniverseList').val() ?  $('#iduniverseList').val() : null,
                 active: $("#flagactive").prop("checked"),
                 showInAdjust: $("#flagShowInAdjust").prop("checked"),
                 userID: $('#iduserID').val(),
                 brandIDList: $('#brandList').val(),
            };


            if (frmdata.brandName.trim() != "" && frmdata.brandGroupID != ""
                && frmdata.brandSegmentID != "" && frmdata.brandTypeID != "") {
                $("#blocker").show();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertBrand", "MasterData")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(frmdata),
                    datatype: "json",
                    success: function (data) {
                        $("#blocker").hide();
                        if (data.isSuccess) {
                            $('#successModalHref').attr("href", "Brand");
                            $('#successModal').modal('show');
                        } else if (data.isDuplicated) {
                            $('#failedModal').modal('show');
                            $('#myModalFailedResult').text('Duplicate data!');
                        } else {
                            $('#failedModal').modal('show');
                            $('#myModalFailedResult').text(data.responseError != ""
                                && data.responseError != null ? data.responseError : 'Save data failed');
                        }
                        $('#confirmID').val('');
                        $('#myModalFailedResult').val('');
                    },
                    error: function () {
                        $("#blocker").hide();
                    }
                });
            }
            else {
                if (frmdata.brandName.trim() == "")
                {
                    $('#failedModal').modal('show');
                    $('#myModalFailedResult').text('Please input Brand Name!');
                }
                else if (frmdata.brandGroupID == "") {
                    $('#failedModal').modal('show');
                    $('#myModalFailedResult').text('Please select Brand Group!');
                }
                else if (frmdata.brandSegmentID == "") {
                    $('#failedModal').modal('show');
                    $('#myModalFailedResult').text('Please select Brand Segment!');
                }
                else if (frmdata.brandTypeID == "") {
                    $('#failedModal').modal('show');
                    $('#myModalFailedResult').text('Please select Brand Type!');
                }
            }


        });

 });
</script>