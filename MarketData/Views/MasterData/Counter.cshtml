@model MarketData.Models.CounterListViewModel
@using Microsoft.AspNetCore.Http;
@using System.Text.Json;
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Counter";
    Html.RenderPartial("_ConfirmModal");
    Html.RenderPartial("_FailedModal");
    Html.RenderPartial("_ImportDataResultModal");
}

<h3>
    @ViewData["Title"]
    <a href="Counter_Edit" class="add-click"><i class="ion-ios-plus text-danger"></i></a>

</h3>
<hr />


<div style="padding-bottom:10px;">
    <div class="row" style="padding-bottom:10px">
        <div class="col text-end d-flex  align-items-center">
            <label class="form-label">Distribution Channel :&nbsp;</label>
            @Html.DropDownList("channelList", new SelectList(Model.channelList, "distributionChannelID", "distributionChannelName"), "All", new { id = "channelList", @class = "form-control ", @style = "width:150px;margin-right: 5px;" })

            <label class="form-label">Retailer Group :&nbsp;</label>
            @Html.DropDownList("retailerGroupList", new SelectList(Model.retailerGroupList, "retailerGroupID", "retailerGroupName"), "All", new { id = "retailerGroupList", @class = "form-control ", @style = "width:150px;margin-right: 5px;" })

            <label class="form-label">Department Store :&nbsp;</label>
            @Html.DropDownList("departmentStoreList", new SelectList(Model.departmentStoreList, "departmentStoreID", "departmentStoreName"), "All", new { id = "departmentStoreList", @class = "form-control ", @style = "width:150px;margin-right: 5px;" })

            <label class="form-label">Brand :&nbsp;</label>
            @Html.DropDownList("brandList", new SelectList(Model.brandList, "brandID", "brandName"), "All", new { id = "brandList", @class = "form-control ", @style = "width:150px;margin-right: 5px;" })
            @*<label class="form-label">Active:&nbsp;</label>
                <select class="form-control status-dropdown" style="margin-right: 5px; width:70px!important">
                    <option value="">All</option>
                    <option value=true>Y</option>
                    <option value="false">N</option>
                </select>
                <form id="uploadFile" action="@Url.Action("ImportBrand", "MasterData")" method="post"
                      enctype="multipart/form-data">
                    <div class="filter-group ">
                        <div class="custom-file-upload" style="margin-top: 6px; height: 35px;">

                            <label for="file-upload" class="custom-file-upload1">
                                <i class="ion-android-document"></i> Import by Excel
                            </label>
                            <input type="text" id="userID" name="userID" value="DDD" hidden />
                            <input id="file-upload" type="file" name="excelFile" />
                            <input type="submit" id="btnSubmit" value="Import" hidden />
                        </div>
                    </div>
                </form>*@
        </div>
    </div>

    <div class="row">

        <div class="col text-end d-flex justify-content-end align-items-center">
            <label class="form-label">Active :&nbsp;</label>
            <select class="form-control status-dropdown" style="margin-right: 5px; width:70px!important">
                <option value="">All</option>
                <option value=true>Y</option>
                <option value="false">N</option>
            </select>
            <form id="uploadFile" action="@Url.Action("ImportBrand", "MasterData")" method="post"
                  enctype="multipart/form-data">
                @{
                    var userPermission = JsonSerializer.Deserialize<MarketData.Model.Response.User.GetUserDetailResponse>(HttpContextAccessor.HttpContext.Session.GetString("userDetail"));
                    <input hidden type="text" value="@userPermission.userID" class="form-control input-sm" id="iduserID" placeholder="">
                }
                <div class="filter-group ">
                    <div class="custom-file-upload" style="margin-top: 6px; height: 35px;">

                        <label for="file-upload" class="custom-file-upload1">
                            <i class="ion-android-document"></i> Import by Excel
                        </label>
                        <input type="text" id="userID" name="userID" value="DDD" hidden />
                        <input id="file-upload" type="file" name="excelFile" />
                        <input type="submit" id="btnSubmit" value="Import" hidden />
                    </div>
                </div>
            </form>

        </div>
    </div>

</div>

<div class="container-xl">
    <table id="tableData" class="display" width="100%"></table>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function base64ToArrayBuffer(base64) {
            var binaryString = window.atob(base64);
            var binaryLen = binaryString.length;
            var bytes = new Uint8Array(binaryLen);
            for (var i = 0; i < binaryLen; i++) {
                var ascii = binaryString.charCodeAt(i);
                bytes[i] = ascii;
            }
            return bytes;
        }

        function saveByteArray(reportName, byte) {
            var blob = new Blob([byte], { type: "text/plain" });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            var fileName = reportName;
            link.download = fileName;
            link.click();
        };

        $("#file-upload").change(function () {
            $("#blocker").show();

            var fd = new FormData();
            var files = $('#file-upload')[0].files;

            fd.append('userID', $('#iduserID').val());

            // Check file selected or not
            if (files.length > 0) {
                fd.append('excelFile', files[0]);
            }

            $.ajax(
                {
                    url: '@Url.Action("ImportCounter", "MasterData")',
                    data: fd,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    success: function (data) {
                        $("#blocker").hide();
                        if (data.isSuccess) {
                            // dataTable.ajax.reload();

                            $('#importSuccess').text("Import Success : " + data.countImportSuccess);
                            $('#importFailed').text("Import Failed : " + data.countImportFailed);

                            if (data.importResult.length > 0) {

                                for (var i = 0; i < data.importResult.length; i++) {
                                    $('#result-import').append("<p id='txtResult' class='text-center'>" + data.importResult[i].result + "</p>");
                                }

                                var sampleArr = base64ToArrayBuffer(data.fileResult);
                                saveByteArray(data.fileName, sampleArr);

                                $('#importDataModalHref').attr("href", "Counter");
                                $('#importDataModal').modal('show');

                            }
                            else {
                                $('#importDataModalHref').attr("href", "Counter");
                                $('#importDataModal').modal('show');
                            }
                        }
                        else {
                            $('#myModalFailedResult').text(data.responseError != ""
                                && data.responseError != null ? data.responseError : 'Import data failed!');
                            $('#failedModal').modal('show');
                        }

                        $("#file-upload").val("");
                    },
                    error: function () {
                        $("#blocker").hide();
                        $('#myModalFailedResult').text('Import data failed!');
                        $('#failedModal').modal('show');
                        $("#file-upload").val("");
                    }
                }
            );
        });


        $("#tableData").one("preInit.dt", function () {

            $button = $('<button class="btn btn-primary btn-sm btnReresh" type="button" style="width: 100px!important;margin-top: -5px;margin-left: 5px;"><i class="ion-refresh text-white"></i> Refresh</button>');
            $("#tableData_filter label").append($button);
            $button.button();

        });

        var dataTable=  $('#tableData').DataTable({
            "ajax": {
                type: "POST",
                url: '@Url.Action("GetCounterList", "MasterData")',
                contentType: "application/json; charset=utf-8",
                dataSrc: function (result) {
                    return result.data;
                }
            },
            "columns": [
                { data: "counterID", visible: false, searchable: false },
                { data: "distributionChannelID", title: "distributionChannelID", visible: false },
                { data: "retailerGroupID", title: "retailerGroupID", visible: false },
                { data: "departmentStoreID", title: "departmentStoreID", visible: false },
                { data: "distributionChannelName", title: "Distribution Channel Name" },
                { data: "retailerGroupName", title: "Retailer Group Name" },
                { data: "departmentStoreName", title: "Department Store Name" },
                { data: "brandName", title: "Brand Name"},
                { data: "active", title: "active", visible: false },
                {
                    data: "active",
                    title: "Active",
                    render: function (data, type, row) {
                        var checkStatus = data ? "checked" : "";
                        return '<input type="checkbox" disabled ' + checkStatus + '>';
                    },
                    className: "text-center",
                    visible: true,
                    searchable: true,
                    orderable: false,
                },
                {
                    orderable: false,
                    title: "Action",
                    className: "text-center",
                    render: function (data, type, row) {
                        return '<a href="Counter_Edit_View?counterID=' + row.counterID +'" class="buttonIcon btn btn-primary btn-sm"><i class="ion-eye text-white" ></i></a>' +
                            '<a href="Counter_Edit?counterID=' + row.counterID + '" class="buttonIcon btn btn-warning btn-sm"><i class="ion-edit text-white"></i></a>' +
                            '<a href="#confirmModal" data-id="' + row.counterID + '" class="delete-click buttonIcon btn btn-danger btn-sm" data-toggle="modal"><i class="ion-android-delete text-white"></i></a>';
                }}
            ]
        });

        $(document).on('click', '.delete-click', function () {
            var id = $(this).attr('data-id');
            $('#confirmID').val(id);
        });

        $('.btnReresh').on('click', function (e) {
            $("#blocker").show();
            dataTable.ajax.reload();
            setTimeout(function () {
                $("#blocker").hide();
            }, 500);
        });

        $('#channelList').on('change', function (e) {

            var status = $(this).val();
            $('#channelList').val(status);
            dataTable.column(1).search(status).draw();
            getDepartmentStoreList()

        });


        $('#retailerGroupList').on('change', function (e) {
            var status = $(this).val();
            $('#retailerGroupList').val(status);
            dataTable.column(2).search(status).draw();

            getDepartmentStoreList()

        });

        function getDepartmentStoreList() {
            var retailerGroupID = $("#retailerGroupList").val();
            var distributionChannelID = $("#channelList").val();

            var model = @Html.Raw(Json.Serialize(Model));
            var departmentStoreList = model.departmentStoreList;

            if (retailerGroupID != "") {
                departmentStoreList = departmentStoreList.filter(function (items) {
                    return items.retailerGroupID == retailerGroupID
                });
            }

            if (distributionChannelID != "") {
                departmentStoreList = departmentStoreList.filter(function (items) {
                    return items.distributionChannelID == $('#channelList').val()
                });
            }

            var lengthSelect = $('#departmentStoreList');

            lengthSelect.empty();
            lengthSelect.append("<option value=''>All</option>")
            $.each(departmentStoreList, function (index, row) {
                lengthSelect.append("<option value='" + row.departmentStoreID + "'>" + row.departmentStoreName + "</option>")
            });

            dataTable.column(3).search('').draw();
        }

        $('#departmentStoreList').on('change', function (e) {
            var status = $(this).val();
            $('#departmentStoreList').val(status);
            dataTable.column(3).search(status).draw();
        });

        $('#brandList').on('change', function (e) {
            var txtSearch = $('#brandList option:selected').text();
            if (txtSearch != 'All') {
                dataTable.column(4).search(txtSearch).draw();
            }
            else {
                dataTable.column(4).search('').draw();
            }
        });


        $('.status-dropdown').on('change', function (e) {
            var status = $(this).val();
            $('.status-dropdown').val(status);
            dataTable.column(5).search(status).draw();
        });


        $('.btnReresh').on('click', function (e) {
            dataTable.ajax.reload();
        });


        $(".btnConfirmModal").click(function () {
            $('#confirmModal').modal('hide');
            $("#blocker").show();
                   var frmdata = {
                       counterID: $('#confirmID').val(),
                       userID: null
            };

            $.ajax({
                 type: "POST",
                 url: '@Url.Action("DeleteCounter", "MasterData")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(frmdata),
                datatype: "json",
                success: function (data) {
                    $("#blocker").hide();
                     if (data.isSuccess) {
                         dataTable.ajax.reload();
                     } else {
                        $('#myModalConfirmResult').text('Delete data failed');
                 }
                     $('#confirmID').val('');
                     $('#myModalConfirmResult').val('');
                },
                error: function () {
                    $("#blocker").hide();
                }
            });
        });
    });

</script>
