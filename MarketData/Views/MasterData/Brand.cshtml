@using Microsoft.AspNetCore.Http;
@using System.Text.Json;
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Brand";
    Html.RenderPartial("_ConfirmModal");
    Html.RenderPartial("_FailedModal");
    Html.RenderPartial("_ImportDataResultModal");
}

<style>
    .font-band {
        font-size: 12px
    }

    table {
        width: 100%;
        table-layout: fixed;
        margin: auto;
    }

    .table thead th {
        width: 100px !important;
    }

    .table td {
    }

    thead, tfoot {
        background: #f9f9f9;
        display: table;
        width: 100%;
        /*width: calc(100% - 18px);*/
    }

    tbody {
        height: 500px;
        overflow: auto;
        overflow-x: hidden;
        display: block;
        width: 100%;
    }

        tbody tr {
            display: table;
            width: 100%;
            table-layout: fixed;
        }
</style>

@{
    var userPermission = JsonSerializer.Deserialize<MarketData.Model.Response.User.GetUserDetailResponse>(HttpContextAccessor.HttpContext.Session.GetString("userDetail"));
    var editMaster = userPermission.editMaster;

    <input hidden type="text" value="@userPermission.userID" class="form-control input-sm" id="iduserID" placeholder="">
    <input hidden type="text" value="@userPermission.viewMaster.ToString()" class="form-control input-sm" id="viewMaster" placeholder="">
    <input hidden type="text" value="@userPermission.editMaster.ToString()" class="form-control input-sm" id="editMaster" placeholder="">


    <h3>
        @ViewData["Title"]

        @if (editMaster)
        {
            <a href="Brand_Edit" class="add-click"><i class="ion-ios-plus text-danger"></i></a>
        }
    </h3>

    <hr />

   
    <div style="padding-bottom:10px;">
        <div class="row">
            <div class="col text-end d-flex justify-content-end align-items-center">
                <label class="form-label">Active :&nbsp;</label>
                <select class="form-control status-dropdown" style="margin-right: 10px; width:70px!important">
                    <option value="">All</option>
                    <option value=true>Y</option>
                    <option value="false">N</option>
                </select>
                @if (editMaster)
                {
                    <form style="margin-top:-15px" id="uploadFile" action="@Url.Action("ImportBrand", "MasterData")" method="post"
                          enctype="multipart/form-data">
                        <div class="filter-group ">
                            @Html.ActionLink("Download Template", "DownloadBrandTemplate", "MasterData")
                            <div class="custom-file-upload" style="margin-top: 6px; height: 35px;">
                                <label for="file-upload" class="custom-file-upload1">
                                    <i class="ion-android-document"></i> Import by Excel
                                </label>
                                <input type="text" id="userID" name="userID" value="DDD" hidden />
                                <input id="file-upload" type="file" name="excelFile" />
                            </div>
                        </div>
                    </form>
                }


            </div>
        </div>

    </div>
}
<div class="container-xl">

    <table id="tableData" class="table  table-hover display" width="100%"></table>

</div>


<script type="text/javascript">

    $(document).ready(function () {
        var viewMasterPermission = $('#viewMaster').val();
        var editMasterPermission = $('#editMaster').val();

        function base64ToArrayBuffer(base64) {
            var binaryString = window.atob(base64);
            var binaryLen = binaryString.length;
            var bytes = new Uint8Array(binaryLen);
            for (var i = 0; i < binaryLen; i++) {
                var ascii = binaryString.charCodeAt(i);
                bytes[i] = ascii;
            }
            return bytes;
        }

        function saveByteArray(reportName, byte) {
            var blob = new Blob([byte], { type: "text/plain" });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            var fileName = reportName;
            link.download = fileName;
            link.click();
        };


        $("#file-upload").change(function () {
            $("#blocker").show();

            var fd = new FormData();
            var files = $('#file-upload')[0].files;

            fd.append('userID', $('#iduserID').val());

            // Check file selected or not
            if (files.length > 0) {
                fd.append('excelFile', files[0]);
            }

            $.ajax(
                {
                    url: '@Url.Action("ImportBrand", "MasterData")',
                    data: fd,
                    processData: false,
                    contentType: false,
                    type: "POST",
                    success: function (data) {

                        $("#blocker").hide();
                        if (data.isSuccess) {
                           // dataTable.ajax.reload();

                            $('#importSuccess').text("Import Success : " + data.countImportSuccess);
                            $('#importFailed').text("Import Failed : " + data.countImportFailed);

                            if (data.importResult.length > 0) {

                                for (var i = 0; i < data.importResult.length; i++) {
                                    $('#result-import').append("<p id='txtResult' class='text-center'>" + data.importResult[i].result+"</p>");
                                }

                                var sampleArr = base64ToArrayBuffer(data.fileResult);
                                saveByteArray(data.fileName, sampleArr);

                                $('#importDataModalHref').attr("href", "Brand");
                                $('#importDataModal').modal('show');
                            }
                            else {
                                $('#importDataModalHref').attr("href", "Brand");
                                $('#importDataModal').modal('show');
                            }
                        }
                        else {
                            $('#myModalFailedResult').text(data.responseError != ""
                                && data.responseError != null ? data.responseError : 'Import data failed!');
                                $('#failedModal').modal('show');
                        }

                        $("#file-upload").val("");
                    },
                    error: function () {
                        $("#blocker").hide();
                        $('#myModalFailedResult').text('Import data failed!');
                        $('#failedModal').modal('show');
                        $("#file-upload").val("");
                    }
                }
            );
        });


        $("#tableData").one("preInit.dt", function () {

            $button = $('<button class="btn btn-primary btn-sm btnReresh" type="button" style="width: 100px!important;margin-top: -5px;margin-left: 5px;"><i class="ion-refresh text-white"></i> Refresh</button>');
            $("#tableData_filter label").append($button);
            $button.button();

        });

        var dataTable = $('#tableData').DataTable({
               "ajax": {
                type: "POST",
                url: '@Url.Action("GetBrandList", "MasterData")',
                contentType: "application/json; charset=utf-8",
                dataSrc: function (result) {
                    return result.brandList;
                }
            },
            "order": [],
            "columns": [
                { data: "brandID", visible: false, searchable: false },
                { data: "brandName", title: "Brand Name"},
                { data: "brandGroupName", title: "Brand Group" },
                { data: "brandSegmentName", title: "Brand Segment" },
                { data: "brandTypeName", title: "Brand Type"},
                { data: "universe", title: "Universe" },
                { data: "brandBirth", title: "Brand Birth" },
                { data: "color", title: "Color", visible: false  },
                {
                    data: "color",
                    title: "Color",
                    render: function (color) {
                        if (color != null && color != "") {
                            return '<input type="textbox" class="form-control input-sm" style="width: 80px;background-color:' + color + ';" readonly/> ';
                        }
                        else {
                            return '<input type="textbox" class="form-control input-sm" style="width: 80px;background-color:white;" readonly/> ';
                        }
                    },
                    className: "text-center",
                    visible: true,
                    orderable: false,
                },
                { data: "isLorealBrand", title: "isLorealBrand", visible: false },
                { data: "active", title: "active", visible: false },
                {
                    data: "active",
                    title: "Active",
                    render: function (data, type, row) {
                        var checkStatus = data ? "checked" : "";
                        return '<input type="checkbox" disabled ' + checkStatus + '>';
                    },
                    className: "text-center",
                    visible: true,
                    searchable: true,
                    orderable: false,
                },
                {
                    orderable: false,
                    title: "Action",
                    className: "text-center",
                    render: function (data, type, row) {

                        if (editMasterPermission == 'True') {
                            return '<a href="Brand_Edit_View?brandID=' + row.brandID + '" class="buttonIcon btn btn-primary btn-sm"><i class="ion-eye text-white" ></i></a>' +
                                '<a href="Brand_Edit?brandID=' + row.brandID + '" class="buttonIcon btn btn-warning btn-sm"><i class="ion-edit text-white"></i></a>';
                        }
                        else if (viewMasterPermission == 'True' && editMasterPermission != 'True') {
                            return '<a href="Brand_Edit_View?brandID=' + row.brandID + '" class="buttonIcon btn btn-primary btn-sm"><i class="ion-eye text-white" ></i></a>';
                        }
                        else {
                            return '';
                        }
                }}
            ]
        });

        $('.btnReresh').on('click', function (e) {
            $("#blocker").show();
            dataTable.ajax.reload();
            setTimeout(function () {
                $("#blocker").hide();
            }, 500);
        });

        $('.status-dropdown').on('change', function (e) {
            var status = $(this).val();
            $('.status-dropdown').val(status);
            dataTable.column(10).search(status).draw();
        });

        $(document).on('click', '.delete-click', function () {
            var id = $(this).attr('data-id');
            $('#confirmID').val(id);
        });

        $('.btnReresh').on('click', function (e) {
            dataTable.ajax.reload();
        });

        $(".btnConfirmModal").click(function () {
                   var frmdata = {
                       brandID: $('#confirmID').val(),
                       userID: null
            };

            $.ajax({
                 type: "POST",
                 url: '@Url.Action("DeleteBrand", "MasterData")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(frmdata),
                datatype: "json",
                 success: function (data) {
                     if (data.isSuccess) {

                         dataTable.ajax.reload();
                         $('#confirmModal').modal('hide');
                     } else {
                        $('#myModalConfirmResult').text('Delete data failed');

                 }

                     $('#confirmID').val('');
                     $('#myModalConfirmResult').val('');
                },
                error: function () {
                }
            });
        });

    });



</script>
